/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Presentacion;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Francois
 */
public class listaProductos extends javax.swing.JPanel {

    DefaultTableModel modelo;
    /**
     * Creates new form NewJPanel
     */
    public listaProductos() {
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("Código");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripción");
        modelo.addColumn("Presentación");
        modelo.addColumn("Precio");
        tbProductList.setModel(modelo);
        
        VentaProductos boleta = new VentaProductos();
        boleta.setVisible(true);
        
        try {
    // Establecer la conexión a la base de datos
    Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=appGestionClientes;encrypt=true;trustServerCertificate=true;", "sa", "123");

    // Crear un Statement para ejecutar la consulta SQL
    Statement stmt = con.createStatement();

    // Ejecutar la consulta SQL y obtener los resultados
    ResultSet rs = stmt.executeQuery("SELECT CodProducto, NombreProducto, DescripcionProducto, PresentacionProducto, PrecioProducto FROM Producto");

    // Obtener el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) tbProductList.getModel();

    // Limpiar la tabla
    model.setRowCount(0);

    // Recorrer los resultados
    while (rs.next()) {
        // Obtener los valores de las columnas
        String codProducto = rs.getString("CodProducto");
        String nombreProducto = rs.getString("NombreProducto");
        String descripcionProducto = rs.getString("DescripcionProducto");
        String presentacionProducto = rs.getString("PresentacionProducto");
        double precioProducto = rs.getDouble("PrecioProducto");

        // Agregar los valores a la tabla
        model.addRow(new Object[]{codProducto, nombreProducto, descripcionProducto, presentacionProducto, precioProducto});
    }

    // Cerrar la conexión a la base de datos
    con.close();
} catch (Exception e) {
    e.printStackTrace();
}
    }
    
    public void nuevaTabla(){
        modelo = new DefaultTableModel();
        tbProductList.setModel(modelo);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProductList = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAgregarProducto = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Listado de productos");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 21, -1, -1));

        tbProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Descripción", "Presentación", "Precio"
            }
        ));
        tbProductList.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tbProductListComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                tbProductListComponentRemoved(evt);
            }
        });
        tbProductList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProductListMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbProductListMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tbProductList);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 510, 292));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));

        jLabel10.setText("Buscar:");

        txtBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarProductoActionPerformed(evt);
            }
        });
        txtBuscarProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarProductoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProductoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarProductoKeyTyped(evt);
            }
        });

        jLabel2.setText("Cantidad");

        btnAgregarProducto.setText("Agregar");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnAgregarProducto)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarProducto))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 71, 520, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void tbProductListComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tbProductListComponentAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbProductListComponentAdded

    private void tbProductListComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tbProductListComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tbProductListComponentRemoved

    private void tbProductListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductListMouseReleased
        // TODO add your handling code here:
        //int fila = tbProductList.getSelectedRow();
        //if (fila == -1) {
            //JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        //} else {
            //codproducto = (tbproducto.getValueAt(fila, 0).toString());
            //txtCodProducto.setText(tbproducto.getValueAt(fila, 0).toString());
            //txtNombreProducto.setText(tbproducto.getValueAt(fila, 1).toString());
            //txtDescripcionProd.setText(tbproducto.getValueAt(fila, 2).toString());
            //cboPresentacion.setSelectedItem(tbproducto.getValueAt(fila, 3).toString());
            //txtprecio.setText(tbproducto.getValueAt(fila, 4).toString());

        //}
    }//GEN-LAST:event_tbProductListMouseReleased

    private void txtBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarProductoActionPerformed

    }//GEN-LAST:event_txtBuscarProductoActionPerformed

    private void txtBuscarProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductoKeyPressed

        try {
            // Establecer la conexión a la base de datos
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=appGestionClientes;encrypt=true;trustServerCertificate=true;", "sa", "123");

            // Crear un Statement para ejecutar la consulta SQL
            Statement stmt = con.createStatement();

            // Ejecutar la consulta SQL y obtener los resultados
            String valorIngresado = txtBuscarProducto.getText();
            ResultSet rs = stmt.executeQuery("SELECT CodProducto, NombreProducto, DescripcionProducto, PresentacionProducto, PrecioProducto FROM Producto WHERE NombreProducto LIKE '" + valorIngresado + "%'");

            // Obtener el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) tbProductList.getModel();

            // Limpiar la tabla
            model.setRowCount(0);

            // Recorrer los resultados
            while (rs.next()) {
                // Obtener los valores de las columnas
                String codProducto = rs.getString("CodProducto");
                String nombreProducto = rs.getString("NombreProducto");
                String descripcionProducto = rs.getString("DescripcionProducto");
                String presentacionProducto = rs.getString("PresentacionProducto");
                double precioProducto = rs.getDouble("PrecioProducto");

                // Agregar los valores a la tabla
                model.addRow(new Object[]{codProducto, nombreProducto, descripcionProducto, presentacionProducto, precioProducto});
            }

            // Cerrar la conexión a la base de datos
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtBuscarProductoKeyPressed

    private void txtBuscarProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductoKeyReleased

        //if (!txtbuscar.getText().isEmpty()) {
            //nombre = txtbuscar.getText();
            //productoDTO = producto.buscar(nombre);
            //if (productoDTO != null) {
            //    limpiarTabla();
            //    modelo = (DefaultTableModel) tbproducto.getModel();
            //    Object[] ob = new Object[8];
            //    ob[0] = productoDTO.getCodProducto();
            //    ob[1] = productoDTO.getNombre();
            //    ob[2] = productoDTO.getDescripcion();
            //    ob[3] = productoDTO.getDescripcion();
            //    ob[4] = productoDTO.getPrecio();
            //    ob[5] = productoDTO.getStock();
            //    modelo.addRow(ob);
            //    tbproducto.setModel(modelo);
                //lblMensaje.setText("Producto Encontrado");
            //} else {
                //lblMensaje.setText("Producto no Encontrado");
            //    limpiarTabla();
            //}
        //} else {
        //    limpiarTabla();
        //    listar();
            //lblMensaje.setText("");

        //}
    }//GEN-LAST:event_txtBuscarProductoKeyReleased

    private void txtBuscarProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductoKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if ((!(Character.isLetter(c)) && (!(c == KeyEvent.VK_BACK_SPACE)) && (!(c == KeyEvent.VK_SPACE)))) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        //txtbuscarKeyPressed(evt);

        if (txtBuscarProducto.getText().length() >= 50) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

            if ((!txtBuscarProducto.getText().startsWith("1")) && (!txtBuscarProducto.getText().startsWith("2"))) {
                JOptionPane.showMessageDialog(null, "Nombre no válido", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_txtBuscarProductoKeyTyped

    private void tbProductListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductListMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbProductListMouseClicked

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        // TODO add your handling code here:
        
        int filaSeleccionada = tbProductList.getSelectedRow();
        
        if(filaSeleccionada >= 0){
           String datos[] = new String[4];
           //datos[0] = tbProductList.getValueAt(filaSeleccionada, 0).toString();
           datos[1] = tbProductList.getValueAt(filaSeleccionada, 1).toString();
           //datos[2] = tbProductList.getValueAt(filaSeleccionada, 2).toString();
           //datos[3] = tbProductList.getValueAt(filaSeleccionada, 3).toString();
           datos[4] = tbProductList.getValueAt(filaSeleccionada, 4).toString();
           
            VentaProductos.modelo2.addRow(datos);
            modelo.removeRow(filaSeleccionada);
        }
        
        
        
        
        
        
        
        // Obtener el valor ingresado en txtCantidad
        String cantidadStr = txtCantidad.getText();
        // Verificar si el valor ingresado es un número positivo
        if (!cantidadStr.matches("\\d+") || Integer.parseInt(cantidadStr) <= 0) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese valor válido");
            return;
        }
        int cantidad = Integer.parseInt(cantidadStr);

        // Obtener el producto seleccionado en tbProductList
        int selectedRow = tbProductList.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un producto de la lista");
            return;
        }
        String nombreProducto = tbProductList.getValueAt(selectedRow, 1).toString();
        double precioProducto = Double.parseDouble(tbProductList.getValueAt(selectedRow, 2).toString());

        // Crear un array con los datos de la nueva fila
        Object[] newRow = {cantidad, nombreProducto, precioProducto};

        // Obtener el modelo de tbBoleta en el formulario VentaProductos
        //DefaultTableModel model = (DefaultTableModel) VentaProductos.tbBoleta.getModel();

        // Agregar la nueva fila al modelo
        //model.addRow(newRow);
    }//GEN-LAST:event_btnAgregarProductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbProductList;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
